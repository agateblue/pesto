:root {
  --space-0: 0;
  --space-1: 0.25rem;
  --space-2: 0.5rem;
  --space-3: 1rem;
  --space-4: 1.5rem;

  --green: #4cb248;
  --primary-color: rgb(199, 240, 240);
  --text-color: rgba(44, 44, 44, 1);
  --text-discrete-color: rgba(125, 125, 125, 1);
  --font-family: Helvetica, sans-serif;
  --background-color: white;
  --card-background: var(--background-color);
  --header-background: var(--background-color);
  --layout-separator: 1px solid rgb(120, 112, 112);
  --discrete-layout-separator: 1px solid rgb(120, 112, 112, 0.6);
  --list-separator: 1px solid rgb(213, 213, 213);

  --sidebar-background: rgb(240, 240, 240);
  --button-radius: 2px;
  --dialog-backdrop: rgba(55, 55, 55, 0.7);
}

/* RESET */
/* from https://piccalil.li/blog/a-more-modern-css-reset/ */
/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Prevent font size inflation */
html {
  -moz-text-size-adjust: none;
  -webkit-text-size-adjust: none;
  text-size-adjust: none;
}

/* Remove default margin in favour of better control in authored CSS */
body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
  margin-block-end: 0;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role='list'],
ol[role='list'] {
  list-style: none;
}

/* Set core body defaults */
body {
  min-height: 100vh;
  line-height: 1.5;
  margin: 0;
}

/* Set shorter line heights on headings and interactive elements */
h1,
h2,
h3,
h4,
button,
input,
label {
  line-height: 1.1;
}

h1,
h2,
h3,
h4 {
  text-wrap: balance;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
  color: currentColor;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font-family: inherit;
  font-size: inherit;
  min-width: 0;
}

/* Make sure editor is not tiny */
.editor {
  min-height: 10em;
}
.autoresize {
  field-sizing: content;
}

/* Anything that has been anchored to should have extra scroll margin */
:target {
  scroll-margin-block: 5ex;
}

/* endreset */

html {
  font-family: Georgia, serif;
  font-size: 20px;
}
body {
  background: var(--background-color);
}

.wrapper {
  margin-inline: auto;
  padding-inline: var(--space-3);
  max-width: 60ch;
}

.scroll__wrapper {
  display: flex;
  flex-direction: column;
  height: 100%;
  width: 100%;
  position: relative;
  > header {
    position: sticky;
    top: 0;
    background-color: var(--header-background);
    padding: var(--space-2);
    margin-block-end: var(--space-2);
    z-index: 4;
    border-bottom: var(--layout-separator);
    display: flex;
    flex-direction: row;
    vertical-align: center;
    > *:not(dialog) {
      margin-block: 0;
      padding: var(--space-1);
    }
  }
  > .scroll {
    flex: 1;
    overflow-x: auto;
    overflow-y: auto;
    padding: var(--space-1);
    width: 100%;
  }
}

/* composition */

.my__layout {
  display: flex;
  flex-direction: row;
  align-items: stretch;
  min-height: 100vh;

  aside:first-child {
    min-width: 30ch;
    background: var(--sidebar-background);
    border-inline-end: var(--layout-separator);
  }
  aside:last-child {
    flex-basis: 40ch;
    border-inline-start: var(--layout-separator);
  }
  aside,
  main {
    display: var(--display, block);
    overflow: scroll;
  }
}

[data-layout='single-column'] {
  .my__layout {
    &:has([data-fullpage='true']) > *:not([data-fullpage='true']) {
      --display: none;
    }

    &:not(:has([data-fullpage='true'])) main {
      --display: block;
      width: 100%;
      overflow: unset;
    }
    &:not(:has([data-fullpage='true'])) > *:not(main) {
      --display: none;
    }

    [data-fullpage='true'] {
      width: 100%;
    }
  }
}

[data-layout='multi-columns'] {
  .my__layout {
    aside:first-child {
      flex-basis: 25ch;
      height: 100vh;
    }
    main {
      flex-grow: 1.5;
      height: 100vh;
    }
    aside:last-child {
      flex-grow: 1;
      height: 100vh;
    }
  }
}

[data-layout='multi-columns'] .layout__multi-hidden {
  display: none;
}

[data-layout='single-column'] .layout__single-hidden {
  display: none;
}

.flex__stacking-container {
  container-type: inline-size;
}

.flex__column {
  display: flex;
  flex-direction: column;
}

.flex__row {
  display: flex;
  flex-direction: row;
  @container (max-width: 500px) {
    display: block;
  }
}
.flex__grow {
  flex-grow: 1;
}
.flex__equal-size > * {
  flex: 1 1 0;
}
.flex__gap {
  gap: var(--space-2);
}
.flex__align-start {
  align-items: start;
}
.flex__align-center {
  align-items: center;
}
.flex__align-end {
  align-items: end;
}
.flex__justify-end {
  justify-content: flex-end;
}
.flex__justify-between {
  justify-content: space-between;
}

/* spacing */

.m__block-0 {
  margin-block: var(--space-0);
}

.m__block-1 {
  margin-block: var(--space-1);
}

.m__block-2 {
  margin-block: var(--space-2);
}

.m__block-3 {
  margin-block: var(--space-3);
}

.m__block-4 {
  margin-block: var(--space-4);
}

.m__inline-0 {
  margin-inline: var(--space-0);
}

.m__inline-1 {
  margin-inline: var(--space-1);
}

.m__inline-2 {
  margin-inline: var(--space-2);
}

.m__inline-3 {
  margin-inline: var(--space-3);
}

.m__inline-4 {
  margin-inline: var(--space-4);
}

.p__block-0 {
  padding-block: var(--space-0);
}

.p__block-1 {
  padding-block: var(--space-1);
}

.p__block-2 {
  padding-block: var(--space-2);
}

.p__block-3 {
  padding-block: var(--space-3);
}

.p__block-4 {
  padding-block: var(--space-4);
}

.p__inline-0 {
  padding-inline: var(--space-0);
}

.p__inline-1 {
  padding-inline: var(--space-1);
}

.p__inline-2 {
  padding-inline: var(--space-2);
}

.p__inline-3 {
  padding-inline: var(--space-3);
}

.p__inline-4 {
  padding-inline: var(--space-4);
}

/* blocks */
input,
button,
textarea,
[contenteditable='true'],
select,
button {
  accent-color: var(--primary-color);
}

svg {
  vertical-align: middle;
}

.icon__size-1 {
  width: var(--space-1)
}
.icon__size-2 {
  width: var(--space-2)
}
.icon__size-3 {
  width: var(--space-3)
}
.icon__size-4 {
  width: var(--space-4)
}
@keyframes rotating {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
.rotating {
  animation: rotating 3s linear infinite;
}

.button,
button,
input[type='submit'] {
  background: var(--button-color, var(--primary-color));
  color: var(--button-text-color, var(--text-color));
  border: none;
  padding: var(--space-2);
  border-radius: var(--button-radius);
  text-decoration: none;
  cursor: pointer;
}

.button:hover,
button:hover,
input[type='submit']:hover {
  cursor: pointer;
}

.button__link {
  background: none;
  text-decoration: underline;
  color: hsl(from var(--text-color) h s l / 0.7);
  padding-inline: 0;
  padding-block: var(--space-1);
}

.button__icon {
  background: none;
  color: hsl(from var(--text-color) h s l / 0.7);
  padding-block: var(--space-2);
}
.button__transparent {
  background: none;
  border: none;
}
.button__outlined {
  background: none;
  border: 2px solid var(--button-color, var(--primary-color));
  color: var(--button-color, var(--primary-color));
}
.button__discrete {
  --button-color: var(--text-discrete-color);
}
textarea {
  width: 100%;
  padding: var(--space-1);
}

.message {
  text-transform: capitalize;
}
.message__success,
.message__error,
.message__capitalize {
  font-weight: bold;
}
.form__field {
  label {
    display: block;
    font-weight: bold;
    margin-block-end: var(--space-1);
  }
  [type='checkbox'] + label {
    display: inline-block;
    font-weight: normal;
  }
  .form__help {
    font-size: 80%;
    font-style: italic;
  }
  input:not([type='checkbox']),
  textarea {
    width: 100%;
  }
}

.builder__field {
  --flow-space: var(--space-2);
}
.app > nav {
  border-block-end: var(--layout-separator);
}
.nav__main {
  ul {
    margin: 0;
    padding: 0;
    list-style-type: none;
    --flow-space: var(--space-1);
  }
  li {
    hr {
      margin: 0;
      border: var(--list-separator);
    }
    a {
      padding: var(--space-2);
      display: block;
      text-decoration: none;
    }
    a:hover {
      background: var(--primary-color);
    }
  }
  svg {
    margin-inline-end: var(--space-2);
  }
  [data-current-page=true] {
    background-color: var(--primary-color);
  }
}

.todolist {
  list-style: none;
  margin-inline-start: 0;
  padding-inline-start: 0;
}
.todolist li {
  --flow-space: var(--space-1);
  margin-block: var(--space-1);

  button,
  textarea,
  .flow {
    margin: 0;
    padding: var(--space-1);
  }

  textarea {
    border: none;
    border-bottom: var(--list-separator);
  }
  textarea:focus {
    border: 0;
  }
}

li:has(kbd) {
  margin-bottom: var(--space-1);
  kbd {
    padding-inline: var(--space-1);
    border-radius: 2px;
    border: var(--layout-separator);
  }
}
hr {
  border: none;
  border-top: 1px solid var(--text-discrete-color);
}
.todolist input[type='checkbox'] {
  scale: 1.5;
  margin-inline-end: var(--space-2);
  margin-block: 0;
}

.todolist > li > .todolist {
  margin-inline-start: var(--space-4);
}

input[type='text'].input__discrete {
  border: none;
  border-bottom: var(--layout-separator);
}

/* see https://piccalil.li/blog/my-favourite-3-lines-of-css/ */
.flow > * + * {
  margin-block-start: var(--flow-space, 1em);
}
.flow > *:first-child {
  margin-block-start: 0;
}

.prose {
  --flow-space: var(--space-3);
}

.diary__note[role='listitem'] {
  border-bottom: var(--list-separator);
}

.board {
  min-width: 100vw;
  min-height: 100vh;
  display: flex;
  overflow-x: scroll;
  padding: var(--space-2);
}
.board__column {
  --flow-space: var(--space-3);
  padding: var(--space-2);
  flex: 1 1 0;
  min-width: clamp(20ch, 35ch, 90vw);
}
.card {
  background: var(--card-background);
  border: var(--list-separator);
  padding: var(--space-2);
  list-style: none;
  width: 100%;
}

.grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(var(--grid-item-width, 30ch), 1fr));
}

.grid__gap {
  gap: var(--space-2);
}

dialog {
  border: none;
  width: 80ch;
  max-width: 100%;
  padding: var(--space-2);
  &::backdrop {
    background: var(--dialog-backdrop);
  }
}
/* when the content is shorter than the treshold, we simply hide the button */
[data-expanded]:has(
    > :last-child:nth-child(1),
    > :last-child:nth-child(2),
    > :last-child:nth-child(3)
  ) {
  ~ button[aria-expanded] {
    display: none;
  }
}
/* manage expand/collaspe on elements with more than three children */
[data-expanded='false']:has(*:nth-child(-n + 3)) {
  :not(*:nth-child(-n + 3)) {
    display: none;
  }
}

table {
  border-collapse: collapse;
  caption {
    padding: var(--space-1);
    font-weight: bold;
    text-align: left;
  }
}

.table__simpledata {
  width: 100%;
  tr {
    border-top: var(--list-separator);
  }
  tr:hover td {
    background: var(--primary-color);
  }
  td {
    padding: var(--space-1);
    text-align: left;
  }
}
